// s2s-svg-content/__tests__/index-js

//'use strict';
import React from 'react';
import { shallow, mount, render } from 'enzyme';
import sinon from 'sinon';

jest.unmock('../src/index.jsx');
jest.unmock('../node_modules/s2s-base-class');
jest.unmock('../node_modules/sinon');
// jest.unmock('../node_modules/immutable');
// jest.unmock('../node_modules/sinon');
import ReactDOM from 'react-dom';
import {
  AlertIconSVG,
  ArrowDownLeftIconSVG,
  ArrowUpRightIconSVG,
  AvatarIconSVG,
  BellEmptyIconSVG,
  BellFilledIconSVG,
  CaretDownIconSVG,
  CaretUpIconSVG,
  FirefoxIconSVG,
  GoogleChromeIconSVG,
  GroupIconSVG,
  HeadphonesIconSVG,
  HeadphonesBorderIconSVG,
  HelpIconSVG,
  InfoIconSVG,
  LockIconSVG,
  LockBorderIconSVG,
  MicIconSVG,
  MicBorderIconSVG,
  MicMutedIconSVG,
  MicMutedBorderIconSVG,
  MicrosoftEdgeIconSVG,
  NoImageIconSVG,
  PauseIconSVG,
  PauseBorderIconSVG,
  SafariIconSVG,
  SearchIconSVG,
  SpeakerIconSVG,
  StatusAvailableIconSVG,
  StatusBusyIconSVG,
  StatusOfflineIconSVG
} from '../src/index.jsx';

//These tests will simply make sure that each svg has a path, title, and description.
describe('s2s-svg-conent tests', ()=>{

  it('renders AlertIconSVG', () => {
    const wrapper = mount(<div><AlertIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length + wrapper.find('Circle').length + wrapper.find('Rect').length ).toEqual(3);
  });

  it('renders ArrowDownLeftIconSVG', () => {
    const wrapper = mount(<div><ArrowDownLeftIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders ArrowUpRightIconSVG', () => {
    const wrapper = mount(<div><ArrowUpRightIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders AvatarIconSVG', () => {
    const wrapper = mount(<div><AvatarIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length + wrapper.find('Circle').length ).toEqual(2);
  });

  it('renders BellEmptyIconSVG', () => {
    const wrapper = mount(<div><BellEmptyIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders BellFilledIconSVG', () => {
    const wrapper = mount(<div><BellFilledIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders CaretDownIconSVG', () => {
    const wrapper = mount(<div><CaretDownIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders CaretUpIconSVG', () => {
    const wrapper = mount(<div><CaretUpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders FirefoxIconSVG', () => {
    const wrapper = mount(<div><FirefoxIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders GoogleChromeIconSVG', () => {
    const wrapper = mount(<div><GoogleChromeIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders GroupIconSVG', () => {
    const wrapper = mount(<div><GroupIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(2);
  });

  it('renders HeadphonesIconSVG', () => {
    const wrapper = mount(<div><HeadphonesIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders HeadphonesBorderIconSVG', () => {
    const wrapper = mount(<div><HeadphonesBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(2);
  });

  it('renders HelpIconSVG', () => {
    const wrapper = mount(<div><HelpIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders InfoIconSVG', () => {
    const wrapper = mount(<div><InfoIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(2);
  });

  it('renders LockIconSVG', () => {
    const wrapper = mount(<div><LockIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders LockBorderIconSVG', () => {
    const wrapper = mount(<div><LockBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(4);
  });

  it('renders MicIconSVG', () => {
    const wrapper = mount(<div><MicIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders MicBorderIconSVG', () => {
    const wrapper = mount(<div><MicBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(3);
  });

  it('renders MicMutedIconSVG', () => {
    const wrapper = mount(<div><MicMutedIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders MicMutedBorderIconSVG', () => {
    const wrapper = mount(<div><MicMutedBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length).toEqual(3);
  });

  it('renders MicrosoftEdgeIconSVG', () => {
    const wrapper = mount(<div><MicrosoftEdgeIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders NoImageIconSVG', () => {
    const wrapper = mount(<div><NoImageIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length +  wrapper.find('Circle').length + wrapper.find('Rect').length ).toEqual(8);
  });

  it('renders PauseIconSVG', () => {
    const wrapper = mount(<div><PauseIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders PauseBorderIconSVG', () => {
    const wrapper = mount(<div><PauseBorderIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(3);
  });

  it('renders SafariIconSVG', () => {
    const wrapper = mount(<div><SafariIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders SearchIconSVG', () => {
    const wrapper = mount(<div><SearchIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(2);
  });

  it('renders SpeakerIconSVG', () => {
    const wrapper = mount(<div><SpeakerIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

  it('renders StatusAvailableIconSVG', () => {
    const wrapper = mount(<div><StatusAvailableIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Circle').length ).toEqual(1);
  });

  it('renders StatusBusyIconSVG', () => {
    const wrapper = mount(<div><StatusBusyIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length + wrapper.find('Rect').length).toEqual(2);
  });

  it('renders StatusOfflineIconSVG', () => {
    const wrapper = mount(<div><StatusOfflineIconSVG title='test' description='this is for testing' /></div>);
    expect(wrapper.find('Path').length ).toEqual(1);
  });

});
